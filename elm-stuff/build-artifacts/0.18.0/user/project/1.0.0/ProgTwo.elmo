var _user$project$ProgTwo$nameDiv = F2(
	function (model, _p0) {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$String$append,
						'Name is:',
						_elm_lang$core$Basics$toString(model.name))),
				_1: {ctor: '[]'}
			});
	});
var _user$project$ProgTwo$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h3,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('second module'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								'Count is: ',
								_elm_lang$core$Basics$toString(model.count))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'Radius is: ',
									_elm_lang$core$Basics$toString(model.panelRadius))),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							A2(
								_elm_lang$core$List$map,
								_user$project$ProgTwo$nameDiv(model),
								A2(_elm_lang$core$List$range, 1, 1))),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$ProgTwo$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Increment':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{count: model.count + 1}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Decrement':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{count: model.count - 1}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Incr':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{count: model.count + 1}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Decr':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{count: model.count - 1}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateName':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{name: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{panelRadius: _p1._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$ProgTwo$model = {count: 0, name: '', panelRadius: 0};
var _user$project$ProgTwo$Model = F3(
	function (a, b, c) {
		return {count: a, name: b, panelRadius: c};
	});
var _user$project$ProgTwo$UpdateRadius = function (a) {
	return {ctor: 'UpdateRadius', _0: a};
};
var _user$project$ProgTwo$UpdateName = function (a) {
	return {ctor: 'UpdateName', _0: a};
};
var _user$project$ProgTwo$Decr = function (a) {
	return {ctor: 'Decr', _0: a};
};
var _user$project$ProgTwo$Incr = function (a) {
	return {ctor: 'Incr', _0: a};
};
var _user$project$ProgTwo$subs = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _user$project$Interop$recvIncr(_user$project$ProgTwo$Incr),
			_1: {
				ctor: '::',
				_0: _user$project$Interop$recvDecr(_user$project$ProgTwo$Decr),
				_1: {
					ctor: '::',
					_0: _user$project$Interop$recvName(_user$project$ProgTwo$UpdateName),
					_1: {
						ctor: '::',
						_0: _user$project$Interop$recvRadius(_user$project$ProgTwo$UpdateRadius),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$ProgTwo$main = _elm_lang$html$Html$program(
	{
		init: {ctor: '_Tuple2', _0: _user$project$ProgTwo$model, _1: _elm_lang$core$Platform_Cmd$none},
		update: _user$project$ProgTwo$update,
		view: _user$project$ProgTwo$view,
		subscriptions: _user$project$ProgTwo$subs
	})();
var _user$project$ProgTwo$Decrement = {ctor: 'Decrement'};
var _user$project$ProgTwo$Increment = {ctor: 'Increment'};
